// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`webpack.config.js includes react-webpack-fast-refresh with the --hot option 1`] = `
Object {
  "devServer": Object {
    "allowedHosts": Array [
      ".test",
      ".local",
    ],
    "client": Object {
      "overlay": Object {
        "errors": true,
        "warnings": false,
      },
    },
    "devMiddleware": Object {
      "writeToDisk": true,
    },
    "hot": true,
    "port": 8000,
    "proxy": Object {
      "/dist": Object {
        "pathRewrite": Object {
          "^/dist": "",
        },
      },
    },
  },
  "devtool": "source-map",
  "entry": () => getEntryPoints(config),
  "experiments": Object {
    "outputModule": false,
  },
  "externals": Object {
    "jquery": "jQuery",
    "lodash": "lodash",
  },
  "mode": "development",
  "module": Object {
    "rules": Array [
      Object {
        "exclude": input => shouldExclude(input, include),
        "test": /\\^\\(\\?!\\.\\*\\\\\\.d\\\\\\.tsx\\?\\$\\)\\.\\*\\\\\\.\\[tj\\]sx\\?\\$/,
        "use": Array [
          Object {
            "loader": "/config/webpack/plugins/noop-loader.js",
          },
          Object {
            "loader": "/node_modules/babel-loader/lib/index.js",
            "options": Object {
              "cacheDirectory": true,
            },
          },
          Object {
            "loader": "@linaria/webpack-loader",
            "options": Object {
              "babelOptions": Object {},
              "extension": ".linaria.module.css",
              "overrideContext": context => ({
            ...context,
            $RefreshReg$: () => {}
          }),
              "sourceMap": true,
            },
          },
        ],
      },
      Object {
        "test": /\\\\\\.svg\\$/,
        "use": Array [
          "@svgr/webpack",
          "url-loader",
        ],
      },
      Object {
        "exclude": Array [
          /\\\\\\.module\\\\\\.css\\$/,
          /\\\\\\.linaria\\\\\\.module\\\\\\.css/,
        ],
        "test": /\\\\\\.css\\$/,
        "use": Array [
          Object {
            "loader": "/node_modules/mini-css-extract-plugin/dist/loader.js",
          },
          Object {
            "loader": "/node_modules/css-loader/dist/cjs.js",
            "options": Object {
              "sourceMap": true,
              "url": false,
            },
          },
          Object {
            "loader": "/node_modules/postcss-loader/dist/cjs.js",
            "options": Object {
              "postcssOptions": Object {},
            },
          },
        ],
      },
      Object {
        "exclude": Array [
          /\\\\\\.module\\\\\\.css\\$/,
          /\\\\\\.linaria\\\\\\.module\\\\\\.css/,
        ],
        "test": /\\\\\\.\\(sc\\|sa\\)ss\\$/,
        "use": Array [
          Object {
            "loader": "/node_modules/mini-css-extract-plugin/dist/loader.js",
          },
          Object {
            "loader": "/node_modules/css-loader/dist/cjs.js",
            "options": Object {
              "sourceMap": true,
              "url": false,
            },
          },
          Object {
            "loader": "/node_modules/postcss-loader/dist/cjs.js",
            "options": Object {
              "postcssOptions": Object {},
            },
          },
          Object {
            "loader": "/node_modules/sass-loader/dist/cjs.js",
            "options": Object {
              "sourceMap": true,
            },
          },
        ],
      },
      Object {
        "exclude": Array [
          /\\\\\\.linaria\\\\\\.module\\\\\\.css\\$/,
        ],
        "test": /\\\\\\.module\\\\\\.css\\$/,
        "use": Array [
          Object {
            "loader": "/node_modules/mini-css-extract-plugin/dist/loader.js",
          },
          Object {
            "loader": "/node_modules/css-loader/dist/cjs.js",
            "options": Object {
              "import": false,
              "modules": true,
              "sourceMap": true,
              "url": false,
            },
          },
          Object {
            "loader": "/node_modules/postcss-loader/dist/cjs.js",
            "options": Object {
              "postcssOptions": Object {},
            },
          },
          Object {
            "loader": "/node_modules/sass-loader/dist/cjs.js",
            "options": Object {
              "sourceMap": true,
            },
          },
        ],
      },
      Object {
        "test": /\\\\\\.linaria\\\\\\.module\\\\\\.css/,
        "use": Array [
          Object {
            "loader": "/node_modules/mini-css-extract-plugin/dist/loader.js",
          },
          Object {
            "loader": "css-loader",
          },
        ],
      },
    ],
  },
  "optimization": Object {
    "concatenateModules": false,
    "minimizer": Array [
      TerserPlugin: {"test":{},"extractComments":true,"parallel":true,"minimizer":{"options":{"parse":{"ecma":8},"compress":{"ecma":5,"warnings":false,"comparisons":false,"inline":2}}}},
      ImageMinimizerPlugin: {"minimizer":{},"loader":true,"test":{},"deleteOriginalAssets":true},
      ImageMinimizerPlugin: {"minimizer":{},"loader":true,"test":{},"deleteOriginalAssets":true},
    ],
    "runtimeChunk": "single",
  },
  "output": Object {
    "chunkFilename": "js/[name].[contenthash].chunk.js",
    "clean": false,
    "filename": pathData => {
      if (pathData.chunk.name === 'runtime') {
        return 'fast-refresh/hmr-runtime.js';
      }
      // match windows and posix paths
      const isBlockAsset = buildFiles[pathData.chunk.name].match(/\\/blocks?\\//) || buildFiles[pathData.chunk.name].match(/\\\\blocks?\\\\/);
      return isBlockAsset ? filenames.block : filenames.js;
    },
    "path": "/dist",
    "publicPath": "/",
  },
  "performance": Object {
    "hints": "warning",
    "maxAssetSize": 10240000,
    "maxEntrypointSize": 40960000,
  },
  "plugins": Array [
    HtmlWebpackPlugin: {},
    ESLintWebpackPlugin: {"extensions":"js","emitError":true,"emitWarning":true,"failOnError":false,"resourceQueryExclude":[],"fix":false,"lintDirtyModulesOnly":true},
    MiniCssExtractPlugin: {"ignoreOrder":false,"runtime":true,"chunkFilename":"[id].css"},
    CopyPlugin: {},
    StylelintWebpackPlugin: {"cache":true,"cacheLocation":"node_modules/.cache/stylelint-webpack-plugin/.stylelintcache","extensions":["css","scss","sass"],"emitError":true,"emitWarning":true,"failOnError":false,"context":"/assets","files":"**/*.(s(c|a)ss|css)","allowEmptyInput":true,"lintDirtyModulesOnly":true},
    DependencyExtractionWebpackPlugin: {"combineAssets":false,"combinedOutputFile":null,"externalizedReport":false,"injectPolyfill":false,"outputFormat":"php","outputFilename":null,"useDefaults":true},
    CleanExtractedDeps: {},
    WebpackRemoveEmptyScriptsPlugin: {"enabled":true,"verbose":false,"extensions":{},"ignore":[],"remove":{}},
    TenUpToolkitTscPlugin: {},
    ReactRefreshPlugin: {"overlay":{"sockHost":"127.0.0.1","sockProtocol":"ws","sockPort":8000,"entry":"/node_modules/@pmmmwh/react-refresh-webpack-plugin/client/ErrorOverlayEntry.js","module":"/node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js","sockIntegration":"wds"},"exclude":[{},{}],"include":{}},
  ],
  "resolve": Object {
    "alias": Object {
      "lodash-es": "lodash",
    },
    "extensions": Array [
      ".tsx",
      ".ts",
      ".js",
    ],
  },
  "stats": Object {
    "all": false,
    "assets": true,
    "errorDetails": true,
    "errors": true,
    "excludeAssets": /\\\\\\.\\(jpe\\?g\\|png\\|gif\\|svg\\|woff\\|woff2\\)\\$/i,
    "moduleTrace": true,
    "modules": true,
    "performance": true,
    "warnings": true,
  },
  "target": "browserslist:> 1%, Firefox ESR, last 2 versions, not ie <= 11, not ie_mob <=11",
}
`;

exports[`webpack.config.js returns proper webpack fast refresh configs for project configs 1`] = `
Array [
  Object {
    "entry": Object {
      "react-refresh-entry": "/node_modules/@pmmmwh/react-refresh-webpack-plugin/client/ReactRefreshEntry.js",
    },
    "mode": "development",
    "name": "react-refresh-entry",
    "output": Object {
      "filename": "[name]/index.min.js",
      "path": "/dist/fast-refresh",
    },
    "plugins": Array [
      DependencyExtractionWebpackPlugin: {"combineAssets":false,"combinedOutputFile":null,"externalizedReport":false,"injectPolyfill":false,"outputFormat":"php","outputFilename":null,"useDefaults":true},
    ],
  },
  Object {
    "entry": Object {
      "react-refresh-runtime": Object {
        "import": "react-refresh/runtime",
        "library": Object {
          "name": "ReactRefreshRuntime",
          "type": "window",
        },
      },
    },
    "mode": "development",
    "name": "react-refresh-runtime",
    "output": Object {
      "filename": "[name]/index.min.js",
      "path": "/dist/fast-refresh",
    },
    "plugins": Array [
      DependencyExtractionWebpackPlugin: {"combineAssets":false,"combinedOutputFile":null,"externalizedReport":false,"injectPolyfill":false,"outputFormat":"php","outputFilename":null,"useDefaults":false},
    ],
  },
]
`;
